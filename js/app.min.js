"use strict";

document.addEventListener('DOMContentLoaded', function () {
  // function's
  function bodyFixScroll(status) {
    var scrollPosition = 0;
    var paddingOffset = window.innerWidth - document.body.offsetWidth + 'px';
    var elementsFixed = document.querySelectorAll('.fixed');
    if (status) {
      document.body.classList.add('scroll-disabled');
      scrollPosition = window.pageYOffset;
      document.body.style.overflow = 'hidden';
      document.body.style.position = 'fixed';
      if (document.body.style.top) {
        document.body.style.top = document.body.style.top;
      } else {
        document.body.style.top = '-' + scrollPosition + 'px';
      }
      document.body.style.width = '100%';
      document.body.style.paddingRight = paddingOffset;
      if (elementsFixed) {
        elementsFixed.forEach(function (item) {
          item.style.marginRight = paddingOffset;
        });
      }
    } else {
      document.body.classList.remove('scroll-disabled');
      scrollPosition = Math.abs(parseInt(document.querySelector('body').style.top.replace('px', '')));
      document.body.style.removeProperty('overflow');
      document.body.style.removeProperty('position');
      document.body.style.removeProperty('top');
      document.body.style.removeProperty('width');
      document.body.style.removeProperty('padding-right');
      if (elementsFixed) {
        elementsFixed.forEach(function (item) {
          item.style.removeProperty('margin-right');
        });
      }
      window.scrollTo({
        top: !isNaN(scrollPosition) ? scrollPosition : 0,
        behavior: 'instant'
      });
    }
  }
  function padSlides(sliderEl, minCount) {
    var wrapper = sliderEl.querySelector('.swiper-wrapper');
    var slides = Array.from(wrapper.children);
    var diff = minCount - slides.length;
    if (diff > 0) {
      for (var i = 0; i < diff; i++) {
        var clone = slides[i % slides.length].cloneNode(true);
        clone.classList.add('swiper-slide--clone');
        wrapper.append(clone);
      }
    }
  }
  function initPaddedSlider(sliderEl) {
    var minCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;
    padSlides(sliderEl, minCount);
    return new Swiper(sliderEl, {
      slidesPerView: 'auto',
      spaceBetween: 26,
      loop: true,
      loopedSlides: sliderEl.querySelectorAll('.swiper-slide').length,
      navigation: {
        nextEl: sliderEl.parentNode.querySelector('.swiper-button-next')
      }
    });
  }

  // checker
  var useItemChecker = function useItemChecker(els, onClickOutside) {
    var checkBodyClick = function checkBodyClick(e) {
      var currentEl = e.target;
      while (currentEl) {
        if (els.includes(currentEl)) break;
        currentEl = currentEl.parentNode;
      }
      if (!currentEl) {
        onClickOutside();
        removeBodyChecker();
      }
    };
    function setBodyChecker() {
      document.documentElement.addEventListener('click', checkBodyClick);
    }
    function removeBodyChecker() {
      document.documentElement.removeEventListener('click', checkBodyClick);
    }
    return {
      setBodyChecker: setBodyChecker,
      removeBodyChecker: removeBodyChecker
    };
  };

  // slides up/down/toggle
  var slideUpQna = function slideUpQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.transitionProperty = 'height, margin, padding';
    target.style.transitionDuration = duration + 'ms';
    target.style.height = target.offsetHeight + 'px';
    target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    if (target.previousElementSibling) {
      target.previousElementSibling.style.pointerEvents = 'none';
    }
    window.setTimeout(function () {
      target.style.display = 'none';
      target.style.removeProperty('height');
      target.style.removeProperty('padding-top');
      target.style.removeProperty('padding-bottom');
      target.style.removeProperty('margin-top');
      target.style.removeProperty('margin-bottom');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      if (target.previousElementSibling) {
        target.previousElementSibling.style.pointerEvents = 'auto';
      }
    }, duration);
    target.parentNode.classList.remove('is--open');
  };
  var slideDownQna = function slideDownQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.removeProperty('display');
    var display = window.getComputedStyle(target).display;
    if (display === 'none') display = 'block';
    target.style.display = display;
    var height = target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.offsetHeight;
    target.style.transitionProperty = "height, margin, padding";
    target.style.transitionDuration = duration + 'ms';
    target.style.height = height + 'px';
    target.style.removeProperty('padding-top');
    target.style.removeProperty('padding-bottom');
    target.style.removeProperty('margin-top');
    target.style.removeProperty('margin-bottom');
    if (target.previousElementSibling) {
      target.previousElementSibling.style.pointerEvents = 'none';
    }
    window.setTimeout(function () {
      target.style.removeProperty('height');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      if (target.previousElementSibling) {
        target.previousElementSibling.style.pointerEvents = 'auto';
      }
    }, duration);
    target.parentNode.classList.add('is--open');
  };

  // inputmask
  Inputmask().mask(document.querySelectorAll('input'));

  // textarea
  var allTexareas = document.querySelectorAll('textarea');
  if (allTexareas) {
    allTexareas.forEach(function (el) {
      el.style.height = el.setAttribute('style', 'height: ' + el.scrollHeight + 'px');
      el.classList.add('auto');
      el.addEventListener('input', function (e) {
        el.style.height = 'auto';
        el.style.height = el.scrollHeight + 'px';
      });
    });
  }

  // mobile menu
  var mobileMenu = document.getElementById('menu');
  var mobileMenuTrigger = document.getElementById('hamburger-toggle');
  var mobileMenuClose = document.getElementById('menu-close');
  if (mobileMenu && mobileMenuTrigger && mobileMenuClose) {
    mobileMenuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (mobileMenu.classList.contains('is--active')) {
        mobileMenu.classList.remove('is--active');
        bodyFixScroll(0);
      } else {
        mobileMenu.classList.add('is--active');
        bodyFixScroll(1);
      }
    });
    mobileMenuClose.addEventListener('click', function (event) {
      event.preventDefault();
      if (mobileMenu.classList.contains('is--active')) {
        mobileMenu.classList.remove('is--active');
        bodyFixScroll(0);
      }
    });
  }

  // dropdown catalog
  var dropdownCatalog = document.getElementById('dropdown-catalog');
  var dropdownCatalogTrigger = document.getElementById('dropdown-catalog-toggle');
  var dropdownCatalogClose = document.querySelectorAll('.dropdown-catalog__close');
  if (dropdownCatalog && dropdownCatalogTrigger && dropdownCatalogClose) {
    dropdownCatalogTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (dropdownCatalog.classList.contains('is--active')) {
        dropdownCatalog.classList.remove('is--active');
        bodyFixScroll(0);
      } else {
        dropdownCatalog.classList.add('is--active');
        bodyFixScroll(1);
      }
    });
    dropdownCatalogClose.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (dropdownCatalog.classList.contains('is--active')) {
          dropdownCatalog.classList.remove('is--active');
          bodyFixScroll(0);
        }
      });
    });
  }

  // brands card accordeon
  var brandsCardTrigger = document.querySelectorAll('.brands-card__trigger');
  if (brandsCardTrigger) {
    brandsCardTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (!item.parentNode.classList.contains('is--open')) {
          slideDownQna(item.nextElementSibling);
        } else {
          slideUpQna(item.nextElementSibling);
        }
      });
    });
  }

  // recommends slider
  var recommendsSliders = document.querySelectorAll('.recommends__slider');
  if (recommendsSliders) {
    recommendsSliders.forEach(function (slider) {
      var swiperSlider = slider.querySelector('.swiper');
      var nextZone = slider.querySelector('.swiper-zone-next');
      var nextBtn = slider.querySelector('.swiper-button-next');
      var swiper = initPaddedSlider(swiperSlider, 10);
      // const swiper = new Swiper(swiperSlider, {
      //     slidesPerView: 'auto',
      //     spaceBetween: 26,
      //     navigation: { nextEl: nextBtn },
      //     breakpoints: {
      //         0: { spaceBetween: 6 },
      //         744: { spaceBetween: 26 }
      //     }
      // });

      // 3) Клик по зоне — листаем вперёд
      nextZone.addEventListener('click', function () {
        swiper.slideNext();
      });

      // 4) Функции показа/скрытия кнопки с GSAP-анимацией
      var showBtn = function showBtn(x, y) {
        if (nextBtn.style.display !== 'block') {
          nextBtn.style.display = 'block';
          // сразу установить в начальную позицию без анимации
          gsap.set(nextBtn, {
            x: x,
            y: y,
            autoAlpha: 1
          });
        }
        // «магнитим» к новым координатам
        gsap.to(nextBtn, {
          x: x,
          y: y,
          duration: 0.3,
          ease: "power3.out"
        });
      };
      var hideBtn = function hideBtn() {
        if (nextBtn.style.display === 'block') {
          gsap.to(nextBtn, {
            autoAlpha: 0,
            duration: 0.2,
            onComplete: function onComplete() {
              nextBtn.style.display = 'none';
              gsap.set(nextBtn, {
                autoAlpha: 1
              });
            }
          });
        }
      };

      // 5) Отслеживаем движение мыши по всему слайдеру
      slider.addEventListener('mousemove', function (e) {
        var sliderRect = slider.getBoundingClientRect();
        var zoneRect = nextZone.getBoundingClientRect();
        var gx = e.clientX;
        var gy = e.clientY;

        // проверяем, что мышь внутри зум- по Y и в зоне по X
        var inVert = gy >= sliderRect.top && gy <= sliderRect.bottom;
        var inZone = gx >= zoneRect.left && gx <= zoneRect.right;
        if (inVert && inZone) {
          // «зажимаем» глобальный X в пределах зоны
          var clampedX = Math.min(Math.max(gx, zoneRect.left), zoneRect.right);
          // переводим в локальные координаты контейнера
          var localX = clampedX - sliderRect.left;
          var localY = gy - sliderRect.top;
          showBtn(localX, localY);
        } else {
          hideBtn();
        }
      });

      // 6) Когда мышь уходит из всего слайдера — прячем кнопку
      slider.addEventListener('mouseleave', hideBtn);
    });
  }

  // promotion blog
  var promotionBlog = document.querySelector('.pro-blog');
  if (promotionBlog) {
    var cursorBtn = promotionBlog.querySelector('.pro-blog__read-more');
    var targetHref = cursorBtn.href;
    var interactiveSelector = 'a, button';
    promotionBlog.addEventListener('mousemove', function (e) {
      var rect = promotionBlog.getBoundingClientRect();
      var _cursorBtn$getBoundin = cursorBtn.getBoundingClientRect(),
        width = _cursorBtn$getBoundin.width,
        height = _cursorBtn$getBoundin.height;
      var x = e.clientX - rect.left;
      var y = e.clientY - rect.top;
      var left = x - width / 2;
      var top = y - height / 2;
      gsap.to(cursorBtn, {
        duration: 0.5,
        left: left,
        top: top,
        ease: "power3.out"
      });
      if (e.target.closest(interactiveSelector)) {
        cursorBtn.classList.remove('is--active');
      } else {
        cursorBtn.classList.add('is--active');
      }
    });
    promotionBlog.addEventListener('mouseleave', function () {
      cursorBtn.classList.remove('is--active');
    });
    promotionBlog.addEventListener('click', function (e) {
      if (e.target.closest('a, button')) return;
      window.location.href = targetHref;
    });
  }
});